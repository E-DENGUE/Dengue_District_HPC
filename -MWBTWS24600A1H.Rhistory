alarmN_quant=RcppRoll::roll_sum(epidemic_flag_quant, n=6,align = "right", fill = NA,partial = FALSE),
alarmN_fixed=RcppRoll::roll_sum(epidemic_flag_fixed), n=6,align = "right", fill = NA,partial = FALSE)%>%
ungroup()%>%
mutate(N_epidemic_sd = if_else(alarmN>0,m_DHF_cases,NA_real_) ,
N_epidemic_pois = if_else(alarmN_pois>0,m_DHF_cases,NA_real_) ,
N_epidemic_quant = if_else(alarmN_quant>0,m_DHF_cases,NA_real_) ,
N_epidemic_fixed = if_else(alarmN_fixed>0,m_DHF_cases,NA_real_)
) %>%
filter(!is.na(alarmN)) %>%
group_by(district, year) %>%
summarize(N_epidemic_sd=sum(N_epidemic_sd, na.rm=T),
N_epidemic_pois=sum(N_epidemic_pois, na.rm=T),
N_epidemic_quant=sum(N_epidemic_quant, na.rm=T),
N_epidemic_fixed=sum(N_epidemic_fixed, na.rm=T),
N_cases=sum(m_DHF_cases, na.rm=T),
pop=mean(pop),
prop_epidemic_2sd = N_epidemic_sd/N_cases,
prop_epidemic_quant = N_epidemic_quant/N_cases,
prop_epidemic_pois = N_epidemic_pois/N_cases,
prop_epidemic_fixed = N_epidemic_fixed/N_cases,
inc_epidemic_2sd = N_epidemic_sd/pop*100000,
inc_epidemic_quant = N_epidemic_quant/pop*100000,
inc_epidemic_pois = N_epidemic_pois/pop*100000,
inc_epidemic_fixed = N_epidemic_fixed/pop*100000,
)
##What we want is stuff in upper quadrant: large proportion of cases occur after epidemic is declared and incidence is high after epidemic is declared.
ggplot(e1, aes(x=inc_epidemic_2sd, y=prop_epidemic_2sd))+
geom_point()+
ylim(0,1)
ggplot(e1, aes(x=inc_epidemic_quant, y=prop_epidemic_quant))+
geom_point()+
ylim(0,1)
ggplot(e1, aes(x=inc_epidemic_pois, y=prop_epidemic_pois))+
geom_point()+
ylim(0,1)
ggplot(e1, aes(x=inc_epidemic_fixed, y=prop_epidemic_fixed))+
geom_point()+
ylim(0,1)
library(dplyr)
library(parallel)
library(ggplot2)
library(tidyverse)
library(broom)
library(plotly)
library(viridis)
library(lubridate)
N_cores = detectCores()
##################################
##DESKTOP EVALUATION OF OUTPUTS
############################################
obs_case <- readRDS('./Data/CONFIDENTIAL/full_data_with_new_boundaries_all_factors_cleaned.rds') %>%
dplyr::select(date, district,m_DHF_cases, pop)
out <- readRDS( "./cleaned_scores/all_crps_slim.rds") %>%  #CRPS score from model
dplyr::select(-pop,-m_DHF_cases) %>%
full_join(obs_case, by=c('date','district'))
obs_epidemics <- readRDS( './Data/observed_alarms.rds') %>% #observed alarms, as flagged in outbreak_quant.R
rename(case_vintage=m_DHF_cases) %>%
dplyr::select(date, district,case_vintage, starts_with('epidemic_flag'), starts_with('threshold'))
miss.dates <- out %>%
group_by(date, horizon) %>%
filter(!(modN %in% c('mod31','mod32', 'mod39')) & horizon %in% c(1,2)) %>%
summarize(N_mods=n(), N_cases=mean(m_DHF_cases)) %>%
ungroup() %>%
group_by(horizon) %>%
mutate(miss_date = if_else(N_mods< max(N_mods),1,0 )) %>%
ungroup()
#note this is not a proper time series--we are double counting cases across models.
ggplot(miss.dates, aes(x=date, y=N_cases)) +
theme_classic()+
geom_line()+
facet_wrap(~horizon) +
geom_point(aes(x=date, y=N_cases, color=miss_date))
#FILTER OUT months when an epidemic has been recognized by the time forecast is made in a specific district (using fixed epidemic threshold)
out_1a <- out %>%
dplyr::select(-pop,-m_DHF_cases) %>%
left_join(obs_epidemics, by=c('district'='district','vintage_date'='date'))   %>%
filter(epidemic_flag_fixed==0) #ONLY EVALUATE MONTHS WHERE EPIDEMIC HAS NOT YET BEEN OBSERVED IN THE DISTRICT
View(out_1a %>% group_by(district,date, horizon) %>% summarize(N=n()))
#Overall
out2 <- out_1a %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 & !(modN %in% c('mod39')) ) %>%
group_by(horizon, modN, form) %>%
summarize(crps1 = mean(crps1),crps2 = mean(crps2) ,N=n() ) %>%
ungroup() %>%
arrange(horizon, crps2) %>%
group_by(horizon) %>%
mutate( w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2) ) %>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
)
View(out2)
#what model factors are associate with a higher weight?
mod1 <- lm(w_i1 ~ rw_season + harm_season+lag2_y + lag2_monthly_cum_ppt + rw_time_spatial + type4_spatial_bym, data=out2)
summary(mod1)
#By calendar month
out3 <- out_1a %>%
filter(!(modN %in% c('mod31','mod32', 'mod39')) & !is.na(crps2)) %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 ) %>%
mutate(month=lubridate::month(date)) %>%
group_by(horizon, month, modN, form) %>%
summarize(crps1 = mean(crps1),crps2=mean(crps2), N=n() ) %>%
arrange(horizon,month, crps2)%>%
ungroup() %>%
group_by(horizon,month) %>%
mutate(w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2) )%>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
)
View(out3)
## How does best model differ by district?
out4 <- out_1a %>%
filter(!(modN %in% c('mod31','mod32', 'mod39')) & !is.na(crps2)) %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 ) %>%
mutate(month=lubridate::month(date)) %>%
group_by(horizon, district, modN, form) %>%
summarize(crps1 = mean(crps1),crps2=mean(crps2), N=n() ) %>%
arrange(horizon,district, crps2)%>%
ungroup() %>%
group_by(horizon,district) %>%
mutate(w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2), rel_wgt1= w_i1/max(w_i1) )%>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
) %>%
dplyr::select(-form)
out4%>%
ggplot(aes(x=modN,y=rel_wgt1, group=district )) +
geom_line()+
theme_classic()
ggplot(out4, aes(x = district, y = modN, fill = rel_wgt1)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE)+
labs(title = "CRPS Heatmap",
x = "District",
y = "ModelN")
#mean of relative weghts across all districts--this basically agrees with what is seen in out2
out4 %>% group_by(modN) %>% summarize(rel_wgt1=mean(rel_wgt1)) %>% arrange(-rel_wgt1)
#how much does inclusion of different components affect model weight?
mods <- out3 %>%
ungroup() %>%
nest_by(month) %>%
mutate(mod = list(lm(w_i2 ~ rw_season + harm_season+lag2_y + lag2_monthly_cum_ppt + rw_time_spatial + type4_spatial_bym, data=data))) %>%
dplyr::reframe(broom::tidy(mod)) %>%
mutate(p.value=round(p.value,3))
View(mods)
mod.weights <- out3 %>%
ungroup() %>%
filter(horizon==2) %>%
dplyr::select(w_i1, modN,  month)
#note this looks very different when looking at data with epidemics filtered out using out
p1.ds <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod39', 'mod31','mod32'))) %>%
dplyr::select(-form) %>%
mutate(pred_count = pred_mean*pop/100000) %>% #CHECK THIS!!
group_by(modN,date) %>%
summarize(m_DHF_cases=sum(m_DHF_cases),pop=sum(pop), pred_count=sum(pred_mean)) %>%
mutate(month=month(date)) %>%
left_join(mod.weights, by=c('modN','month')) %>%
ungroup() %>%
group_by(date) %>%
mutate(ensemble = sum(w_i1/sum(w_i1) *pred_count)  )
p1 <- p1.ds %>%
filter(modN=='mod33') %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_line() +
theme_classic()+
ylim(0,NA)+
geom_line(aes(x=date, y=pred_count,group=modN, color=modN), lwd=0.5, alpha=0.5) +
geom_line(aes(x=date, y=ensemble,group=modN), alpha=0.5 ,lwd=1, col='gray')
ggplotly(p1)
district.plot <- unique(out$district)[1:8]
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod39') )  & modN=='mod33'  & district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 20')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
View(out3)
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &   district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 20')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19'  & district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 19')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod33') )  & modN=='mod33'  & district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 29')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & modN=='mod33'  & district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 29')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p1.ds <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod39', 'mod31','mod32'))) %>%
dplyr::select(-form) %>%
mutate(pred_count = pred_mean*pop/100000) %>% #CHECK THIS!!
group_by(modN,date) %>%
summarize(m_DHF_cases=sum(m_DHF_cases),pop=sum(pop), pred_count=sum(pred_mean)) %>%
mutate(month=month(date)) %>%
left_join(mod.weights, by=c('modN','month')) %>%
ungroup() %>%
group_by(date) %>%
mutate(ensemble = sum(w_i1/sum(w_i1) *pred_count)  )
p1 <- p1.ds %>%
filter(modN=='mod33') %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_line() +
theme_classic()+
ylim(0,NA)+
geom_line(aes(x=date, y=pred_count,group=modN, color=modN), lwd=0.5, alpha=0.5) +
geom_line(aes(x=date, y=ensemble,group=modN), alpha=0.5 ,lwd=1, col='gray')
ggplotly(p1)
names(out_1a)
p1.ds <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod39', 'mod31','mod32'))) %>%
dplyr::select(-form) %>%
group_by(modN,date) %>%
summarize(m_DHF_cases=sum(m_DHF_cases),pop=sum(pop), pred_count=sum(pred_mean)) %>%
mutate(month=month(date)) %>%
left_join(mod.weights, by=c('modN','month')) %>%
ungroup() %>%
group_by(date) %>%
mutate(ensemble = sum(w_i1/sum(w_i1) *pred_count)  )
p1 <- p1.ds %>%
filter(modN=='mod33') %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_line() +
theme_classic()+
ylim(0,NA)+
geom_line(aes(x=date, y=pred_count,group=modN, color=modN), lwd=0.5, alpha=0.5) +
geom_line(aes(x=date, y=ensemble,group=modN), alpha=0.5 ,lwd=1, col='gray')
ggplotly(p1)
p1 <- p1.ds %>%
#filter(modN=='mod33') %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_line() +
theme_classic()+
ylim(0,NA)+
geom_line(aes(x=date, y=pred_count,group=modN, color=modN), lwd=0.5, alpha=0.5) +
geom_line(aes(x=date, y=ensemble,group=modN), alpha=0.5 ,lwd=1, col='gray')
ggplotly(p1)
#FILTER OUT months when an epidemic has been recognized by the time forecast is made in a specific district (using fixed epidemic threshold)
out_1a <- out %>%
dplyr::select(-pop,-m_DHF_cases) %>%
left_join(obs_epidemics, by=c('district'='district','vintage_date'='date'))  # %>%
# filter(epidemic_flag_fixed==0) #ONLY EVALUATE MONTHS WHERE EPIDEMIC HAS NOT YET BEEN OBSERVED IN THE DISTRICT
View(out_1a %>% group_by(district,date, horizon) %>% summarize(N=n()))
#Overall
out2 <- out_1a %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 & !(modN %in% c('mod39')) ) %>%
group_by(horizon, modN, form) %>%
summarize(crps1 = mean(crps1),crps2 = mean(crps2) ,N=n() ) %>%
ungroup() %>%
arrange(horizon, crps2) %>%
group_by(horizon) %>%
mutate( w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2) ) %>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
)
View(out2)
#what model factors are associate with a higher weight?
mod1 <- lm(w_i1 ~ rw_season + harm_season+lag2_y + lag2_monthly_cum_ppt + rw_time_spatial + type4_spatial_bym, data=out2)
summary(mod1)
#By calendar month
out3 <- out_1a %>%
filter(!(modN %in% c('mod31','mod32', 'mod39')) & !is.na(crps2)) %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 ) %>%
mutate(month=lubridate::month(date)) %>%
group_by(horizon, month, modN, form) %>%
summarize(crps1 = mean(crps1),crps2=mean(crps2), N=n() ) %>%
arrange(horizon,month, crps2)%>%
ungroup() %>%
group_by(horizon,month) %>%
mutate(w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2) )%>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
)
View(out3)
## How does best model differ by district?
out4 <- out_1a %>%
filter(!(modN %in% c('mod31','mod32', 'mod39')) & !is.na(crps2)) %>%
left_join(miss.dates, by=c('date','horizon')) %>%
filter(miss_date==0 ) %>%
mutate(month=lubridate::month(date)) %>%
group_by(horizon, district, modN, form) %>%
summarize(crps1 = mean(crps1),crps2=mean(crps2), N=n() ) %>%
arrange(horizon,district, crps2)%>%
ungroup() %>%
group_by(horizon,district) %>%
mutate(w_i1 = (1/crps1^2)/sum(1/crps1^2),w_i2 = (1/crps2^2)/sum(1/crps2^2), rel_wgt1= w_i1/max(w_i1) )%>%
filter(horizon==2)%>%
mutate(rw_season = grepl('cyclic=TRUE', form),
harm_season = grepl('sin12', form),
lag2_y = grepl('lag2_y', form),
lag_y = grepl('lag_y', form),
lag2_monthly_cum_ppt =grepl('lag2_monthly_cum_ppt', form),
iid_spat_intercept=grepl('f(districtID,model = "iid")',form, fixed=T),
rw_time_spatial=grepl(' f(t, replicate=districtID3, model="rw1", hyper = hyper2.rw) ',form, fixed=T),
type4_spatial_bym = grepl('model="bym"', form, fixed=T) *grepl('control.group=list(model="ar1"', form, fixed=T) *grepl('group=time_id1', form, fixed=T)
) %>%
dplyr::select(-form)
View(out4)
out4%>%
ggplot(aes(x=modN,y=rel_wgt1, group=district )) +
geom_line()+
theme_classic()
ggplot(out4, aes(x = district, y = modN, fill = rel_wgt1)) +
geom_tile() +
scale_fill_viridis(discrete = FALSE)+
labs(title = "CRPS Heatmap",
x = "District",
y = "ModelN")
#mean of relative weghts across all districts--this basically agrees with what is seen in out2
out4 %>% group_by(modN) %>% summarize(rel_wgt1=mean(rel_wgt1)) %>% arrange(-rel_wgt1)
#how much does inclusion of different components affect model weight?
mods <- out3 %>%
ungroup() %>%
nest_by(month) %>%
mutate(mod = list(lm(w_i2 ~ rw_season + harm_season+lag2_y + lag2_monthly_cum_ppt + rw_time_spatial + type4_spatial_bym, data=data))) %>%
dplyr::reframe(broom::tidy(mod)) %>%
mutate(p.value=round(p.value,3))
View(mods)
#################################################
#Observed vs expected
mod.weights <- out3 %>%
ungroup() %>%
filter(horizon==2) %>%
dplyr::select(w_i1, modN,  month)
p1.ds <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 & !(modN %in% c( 'mod39', 'mod31','mod32'))) %>%
dplyr::select(-form) %>%
group_by(modN,date) %>%
summarize(m_DHF_cases=sum(m_DHF_cases),pop=sum(pop), pred_count=sum(pred_mean)) %>%
mutate(month=month(date)) %>%
left_join(mod.weights, by=c('modN','month')) %>% #weights determined by month-specific  predictions
ungroup() %>%
group_by(date) %>%
mutate(ensemble = sum(w_i1/sum(w_i1) *pred_count)  )
p1 <- p1.ds %>%
#filter(modN=='mod33') %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_line() +
theme_classic()+
ylim(0,NA)+
geom_line(aes(x=date, y=pred_count,group=modN, color=modN), lwd=0.5, alpha=0.5) +
geom_line(aes(x=date, y=ensemble,group=modN), alpha=0.5 ,lwd=1, col='gray')
ggplotly(p1)
district.plot <- unique(out$district)[9:18]
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19'  & district %in% district.plot) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 19')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
names(obs_case
)
obs_vs_expected_district <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19' ) %>%
group_by(district) %>%
summarize(obs=sum(m_DHF_cases), pred=sum(pred_mean))
View(obs_vs_expected_district)
obs_vs_expected_district <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19' ) %>%
group_by(district) %>%
summarize(obs=sum(m_DHF_cases), pred=sum(pred_mean)) %>%
mutate(diff= obs - pred, rr=obs/pred)
View(obs_vs_expected_district)
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19'  & district %in% c('CHOI MOI')) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 19')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod19'  & district %in% c('CHO MOI')) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 19')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
p2 <- out_1a %>%
left_join(obs_case, by=c('date','district')) %>%
filter( horizon==2 &  modN=='mod33'  & district %in% c('CHO MOI')) %>%
dplyr::select(-form) %>%
ggplot(aes(x=date, y=m_DHF_cases), lwd=4) +
geom_point() +
theme_classic()+
ylim(0,NA)+
geom_point(aes(x=date, y=pred_mean,group=modN, color=modN, alpha=0.5))+
facet_wrap(~district,nrow=2) +
geom_ribbon(aes(x=date, ymin=pred_lcl, ymax=pred_ucl),alpha=0.2)+
ggtitle('Model 19')+
geom_hline(yintercept=43.75, col='gray', lty=2)
p2
